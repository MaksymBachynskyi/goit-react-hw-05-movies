{"ast":null,"code":"var _jsxFileName = \"/Users/olgabachynskyi/Desktop/goit-react-hw-05-movies/src/pages/movies.jsx\",\n  _s = $RefreshSig$();\nimport { get, getByName } from 'fetch';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Movies() {\n  _s();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [films, setfilm] = useState('');\n  function search(evnt) {\n    evnt.preventDefault();\n    const nameFilm = evnt.target.elements.searchValue.value;\n    if (nameFilm === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({\n      query: nameFilm\n    });\n    evnt.target.reset();\n  }\n  // useEffect(() => {\n  //   if (searchParams.get('query')) {\n  //     const fetchedEl = async () => {\n  //       try {\n  //         const item = await getByName('batman');\n  //         setfilm(item.data);\n  //       } catch (error) {\n  //         console.log(error);\n  //       }\n  //     };\n  //     fetchedEl();\n  //   }\n  // }, [searchParams]);\n  getByName('batman');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: search,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"searchValue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: films && films.results.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Movies, \"NauV6wFu9uwowDdpFFYnngzUBkg=\", false, function () {\n  return [useSearchParams];\n});\n_c = Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["get","getByName","useEffect","useState","useSearchParams","jsxDEV","_jsxDEV","Movies","_s","searchParams","setSearchParams","films","setfilm","search","evnt","preventDefault","nameFilm","target","elements","searchValue","value","query","reset","children","onSubmit","type","name","fileName","_jsxFileName","lineNumber","columnNumber","results","map","item","title","id","_c","$RefreshReg$"],"sources":["/Users/olgabachynskyi/Desktop/goit-react-hw-05-movies/src/pages/movies.jsx"],"sourcesContent":["import { get, getByName } from 'fetch';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [films, setfilm] = useState('');\n  function search(evnt) {\n    evnt.preventDefault();\n    const nameFilm = evnt.target.elements.searchValue.value;\n    if (nameFilm === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: nameFilm });\n\n    evnt.target.reset();\n  }\n  // useEffect(() => {\n  //   if (searchParams.get('query')) {\n  //     const fetchedEl = async () => {\n  //       try {\n  //         const item = await getByName('batman');\n  //         setfilm(item.data);\n  //       } catch (error) {\n  //         console.log(error);\n  //       }\n  //     };\n  //     fetchedEl();\n  //   }\n  // }, [searchParams]);\n  getByName('batman');\n  return (\n    <div>\n      <form onSubmit={search}>\n        <input type=\"text\" name=\"searchValue\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {films &&\n          films.results.map(item => (\n            <li key={item.id}>\n              <p>{item.title}</p>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,GAAG,EAAEC,SAAS,QAAQ,OAAO;AACtC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,eAAe,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,eAAe,CAAC,CAAC;EACzD,MAAM,CAACO,KAAK,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACrC,SAASU,MAAMA,CAACC,IAAI,EAAE;IACpBA,IAAI,CAACC,cAAc,CAAC,CAAC;IACrB,MAAMC,QAAQ,GAAGF,IAAI,CAACG,MAAM,CAACC,QAAQ,CAACC,WAAW,CAACC,KAAK;IACvD,IAAIJ,QAAQ,KAAK,EAAE,EAAE;MACnB,OAAON,eAAe,CAAC,CAAC,CAAC,CAAC;IAC5B;IACAA,eAAe,CAAC;MAAEW,KAAK,EAAEL;IAAS,CAAC,CAAC;IAEpCF,IAAI,CAACG,MAAM,CAACK,KAAK,CAAC,CAAC;EACrB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACArB,SAAS,CAAC,QAAQ,CAAC;EACnB,oBACEK,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAMkB,QAAQ,EAAEX,MAAO;MAAAU,QAAA,gBACrBjB,OAAA;QAAOmB,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxCxB,OAAA;QAAQmB,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACPxB,OAAA;MAAAiB,QAAA,EACGZ,KAAK,IACJA,KAAK,CAACoB,OAAO,CAACC,GAAG,CAACC,IAAI,iBACpB3B,OAAA;QAAAiB,QAAA,eACEjB,OAAA;UAAAiB,QAAA,EAAIU,IAAI,CAACC;QAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GADZG,IAAI,CAACE,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACtB,EAAA,CA3CuBD,MAAM;EAAA,QACYH,eAAe;AAAA;AAAAgC,EAAA,GADjC7B,MAAM;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}